<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
			    http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>javax.mail</groupId>
    <artifactId>all</artifactId>
    <packaging>pom</packaging>
    <version>${mail.version}</version>
    <name>JavaMail API distribution</name>
    <description>JavaMail API distribution</description>
    <url>http://java.sun.com/projects/javamail</url>

    <licenses>
      <license>
        <name>CDDL</name>
        <url>http://www.sun.com/cddl</url>
        <distribution>repo</distribution>
        <comments>A business-friendly OSS license</comments>
      </license>
      <license>
        <name>GPLv2+CE</name>
        <url>http://XXX</url>
        <distribution>repo</distribution>
        <comments>GPL version 2 plus the Classpath Exception</comments>
      </license>
    </licenses>

    <organization>
	<name>Sun Microsystems, Inc.</name>
	<url>http://www.sun.com</url>
    </organization>

    <properties>
	<mail.version>1.4.2-SNAPSHOT</mail.version>
	<mail.spec.version>1.4</mail.spec.version>
	<activation-api.version>1.1</activation-api.version>
    </properties>

    <developers>
        <developer>
            <id>shannon</id>
            <name>Bill Shannon</name>
            <organization>Sun Microsystems, Inc.</organization>
            <roles>
                <role>lead</role>
            </roles>
        </developer>
    </developers>

    <modules>
	<module>legal</module>
	<module>mail</module>
	<module>mailapi</module>
	<module>smtp</module>
	<module>imap</module>
	<module>pop3</module>
	<module>dsn</module>
	<module>mbox</module>
	<module>demo</module>
	<module>client</module>
	<module>servlet</module>
	<module>webapp</module>
	<module>taglib</module>
    </modules>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.4</source>
                    <target>1.4</target>
                </configuration>
	    </plugin>

	    <!--
		To allow us to generate javadocs that only include some
		classes in certain packages, we need to copy the sources
		to another location and run javadoc against that subset
		of the sources.  This ant task does the copy.
	    -->
	    <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
		<inherited>false</inherited>
                <executions>
		    <execution>
			<phase>package</phase>
			<configuration>
			    <tasks>

				<copy todir="target/javadoc">
				    <fileset dir="mail/src/main/java">
					<include name="**/*.html"/>
					<include name="javax/mail/**"/>
				    </fileset>
				    <fileset dir="mail/src/main/java"
					includes="
			com/sun/mail/imap/IMAPFolder.java,
			com/sun/mail/imap/IMAPMessage.java,
			com/sun/mail/imap/IMAPStore.java,
			com/sun/mail/imap/IMAPSSLStore.java
			com/sun/mail/imap/ACL.java,
			com/sun/mail/imap/Rights.java,
			com/sun/mail/imap/Quota.java,
			com/sun/mail/pop3/POP3Store.java,
			com/sun/mail/pop3/POP3SSLStore.java,
			com/sun/mail/pop3/POP3Folder.java,
			com/sun/mail/pop3/POP3Message.java,
			com/sun/mail/smtp/SMTPMessage.java,
			com/sun/mail/smtp/SMTPAddressFailedException.java,
			com/sun/mail/smtp/SMTPAddressSucceededException.java,
			com/sun/mail/smtp/SMTPSendFailedException.java,
			com/sun/mail/smtp/SMTPTransport.java,
			com/sun/mail/smtp/SMTPSSLTransport.java
					"/>
				    <fileset dir="dsn/src/main/java"
					includes="
			com/sun/mail/dsn/DeliveryStatus.java,
			com/sun/mail/dsn/MessageHeaders.java,
			com/sun/mail/dsn/MultipartReport.java
					"/>
				</copy>

			    </tasks>
			</configuration>
			<goals>
			    <goal>run</goal>
			</goals>
		    </execution>
                </executions>
            </plugin>                                 

	    <plugin>
		<artifactId>maven-javadoc-plugin</artifactId>
		<inherited>false</inherited>
                <executions>
		    <execution>
			<phase>package</phase>
			<goals>
			    <goal>javadoc</goal>
			</goals>
			<configuration>
			    <!-- aggregate not really needed -->
			    <aggregate>true</aggregate>
			    <additionalJOption>-J-Xmx32m</additionalJOption>
			    <author>false</author>
			    <description>
				JavaMail API documentation
			    </description>
			    <doctitle>
				JavaMail API documentation
			    </doctitle>
			    <windowtitle>
				JavaMail API documentation
			    </windowtitle>
			    <splitindex>true</splitindex>
			    <use>true</use>
			    <overview>
				${basedir}/target/javadoc/overview.html
			    </overview>
			    <groups>
				<group>
				    <title>JavaMail API Packages</title>
				    <packages>javax.*</packages>
				</group>
				<group>
				    <title>Sun-specific Packages</title>
				    <packages>com.sun.*</packages>
				</group>
			    </groups>
			    <subpackages>
javax:com.sun.mail.imap:com.sun.mail.pop3:com.sun.mail.smtp:com.sun.mail.dsn
			    </subpackages>
			    <!-- XXX - following should work, but doesn't -->
			    <excludePackageNames>
				com.sun.mail.imap.protocol
			    </excludePackageNames>
			    <!-- have to kludge it with this instead...  -->
			    <additionalparam>
				-exclude com.sun.mail.imap.protocol
			    </additionalparam>
			    <sourcepath>${basedir}/target/javadoc</sourcepath>
			</configuration>
		    </execution>
                </executions>
	    </plugin>

	    <!--
		This rule ensures that all submodules get
		META-INF/LICENSE.txt included in their jar files.
	    -->
	    <plugin>
		<artifactId>maven-remote-resources-plugin</artifactId>
		<executions>
		    <execution>
			<goals>
			    <goal>process</goal>
			</goals>
			<configuration>
			    <resourceBundles>
				<resourceBundle>
				    javax.mail:legal:${mail.version}
				</resourceBundle>
			    </resourceBundles>
			    <!--
			    <resources>
				<resource>META-INF/LICENSE.txt</resource>
			    </resources>
			    -->
			</configuration>
		    </execution>
		</executions>
	    </plugin>

	    <!--
		This is the rule that creates the zip file for distribution.
	    -->
	    <plugin>
		<artifactId>maven-assembly-plugin</artifactId>
		<inherited>false</inherited>
		<!--
		    I'd like this to be run as part of the
		    package phase, but that doesn't work.
		    Have to run it explicitly as:

		    mvn package assembly:assembly

		<executions>
		    <execution>
			<phase>package</phase>
			<goals>
			    <goal>assembly</goal>
			</goals>
		-->
			<configuration>
			    <finalName>mail-${mail.version}</finalName>
			    <descriptors>
				<descriptor>assembly.xml</descriptor>
			    </descriptors>
			</configuration>
		<!--
		    </execution>
		</executions>
		-->
	    </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>${activation-api.version}</version>
        </dependency>
	<!-- following works around a bug that causes NullPointerException -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.3.1</version>
	    <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.2-SNAPSHOT</version>
	    <scope>test</scope>
        </dependency>
    </dependencies>

    <!--
	Following two needed to make <includes> work in dependency plugin
	and <excludes> work in jar plugin.
    -->
    <pluginRepositories>
	<pluginRepository>
	    <id>Maven Snapshots</id>
	    <url>http://people.apache.org/repo/m2-snapshot-repository</url>
	    <snapshots>
		<enabled>true</enabled>
	    </snapshots>
	    <releases>
		<enabled>false</enabled>
	    </releases>
	</pluginRepository>
	<pluginRepository>
	    <id>Codehaus Maven Snapshots</id>
	    <url>http://snapshots.repository.codehaus.org</url>
	    <snapshots>
		<enabled>true</enabled>
	    </snapshots>
	    <releases>
		<enabled>false</enabled>
	    </releases>
	</pluginRepository>
    </pluginRepositories>

    <repositories>
        <repository>
	    <id>Maven Snapshots</id>
	    <url>http://people.apache.org/repo/m2-snapshot-repository</url>
	    <snapshots>
		<enabled>true</enabled>
	    </snapshots>
	    <releases>
		<enabled>false</enabled>
	    </releases>
	</repository>
        <repository>
	    <id>Codehaus Maven Snapshots</id>
	    <url>http://snapshots.repository.codehaus.org</url>
	    <snapshots>
		<enabled>true</enabled>
	    </snapshots>
	    <releases>
		<enabled>false</enabled>
	    </releases>
	</repository>
    </repositories>
</project>
